services:
  postgres:
    image: postgres:15
    container_name: postgres_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: admin
      POSTGRES_DB: mydb
      POSTGRES_PASSWORD: mypassword123
    command: >
      postgres
      -c wal_level=replica
      -c archive_mode=on
      -c archive_command='cp %p /var/lib/postgresql/wal_archive/%f'
      -c max_wal_senders=3
      -c wal_keep_size=1GB
      -c checkpoint_timeout=15min
      -c max_wal_size=2GB
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - wal_archive:/var/lib/postgresql/wal_archive
      - ./backups:/backups
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d mydb"]
      interval: 30s
      timeout: 10s
      retries: 3

  nifi:
    image: apache/nifi:1.25.0
    container_name: apache_nifi
    restart: unless-stopped
    ports:
      - "8443:8443"
    environment:
      - SINGLE_USER_CREDENTIALS_USERNAME=admin
      - SINGLE_USER_CREDENTIALS_PASSWORD=password123456789
    volumes:
      - nifi_conf:/opt/nifi/nifi-current/conf
      - nifi_logs:/opt/nifi/nifi-current/logs
    depends_on:
      postgres:
        condition: service_healthy

  backup:
    image: postgres:15
    container_name: postgres_backup
    restart: unless-stopped
    environment:
      PGPASSWORD: mypassword123
    volumes:
      - ./backups:/backups
      - ./logs:/logs
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      bash -c "
      echo 'Backup container starting...'
      mkdir -p /backups /logs
      
      while true; do
        if pg_isready -h postgres_db -U admin -d mydb; then
          echo '{\"status\":\"healthy\",\"time\":\"'$(date)'\"}' > /logs/status.json
          echo 'System OK at '$(date)
        else
          echo '{\"status\":\"error\",\"time\":\"'$(date)'\"}' > /logs/status.json
          echo 'PostgreSQL not ready at '$(date)
        fi
        sleep 60
      done
      "

  backup_monitor:
    image: nginx:alpine
    container_name: backup_monitor
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./monitor:/usr/share/nginx/html
      - ./logs:/usr/share/nginx/html/logs
    command: >
      sh -c "
      echo 'server {
          listen 80;
          root /usr/share/nginx/html;
          index index.html;
          
          location / {
              try_files \$uri \$uri/ /index.html;
          }
          
          location /logs/ {
              alias /usr/share/nginx/html/logs/;
              autoindex on;
          }
          
          location = /status.json {
              alias /usr/share/nginx/html/logs/status.json;
              add_header Content-Type application/json;
          }
      }' > /etc/nginx/conf.d/default.conf
      
      nginx -g 'daemon off;'
      "

volumes:
  pgdata:
  wal_archive:
  nifi_conf:
  nifi_logs:
