user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    gzip on;
    
    server {
        listen 80;
        server_name _;
        
        root /var/www/html;
        index index.html;
        
        # CORS для всех запросов
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type" always;
        
        # Основная страница
        location / {
            try_files $uri $uri/ /index.html;
        }
        
        # API endpoints
        location /api/status {
            alias /var/www/logs/status.json;
            add_header Content-Type application/json;
        }
        
        location /api/logs {
            alias /var/www/logs/;
            autoindex on;
            autoindex_format json;
        }
        
        location /api/backups {
            alias /var/www/backups/full/;
            autoindex on;
            autoindex_format json;
        }
        
        # Старые пути для совместимости
        location = /status.json {
            alias /var/www/logs/status.json;
            add_header Content-Type application/json;
        }
        
        location /logs/ {
            alias /var/www/logs/;
            autoindex on;
        }
        
        location /backups/ {
            alias /var/www/backups/;
            autoindex on;
            autoindex_format json;
        }
        
        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
        }
    }
}
